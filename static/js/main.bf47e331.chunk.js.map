{"version":3,"sources":["components/Pagination/Pagination.tsx","App.tsx","utils.ts","index.tsx"],"names":["Pagination","total","perPage","currentPage","onPageChange","amountPages","Math","ceil","pages","i","push","className","classNames","disabled","href","onClick","map","page","active","e","handlerCurrentPage","currentTarget","textContent","items","from","to","numbers","n","getNumbers","App","useState","setPerPage","setCurrentPage","start","finish","min","length","itemsOnPages","useEffect","id","value","onChange","event","htmlFor","item","ReactDOM","render","document","getElementById"],"mappings":"oNAUaA,EAA8B,SAAC,GAM1C,IAJK,IADLC,EACI,EADJA,MAAOC,EACH,EADGA,QAASC,EACZ,EADYA,YAAaC,EACzB,EADyBA,aAEvBC,EAAcC,KAAKC,KAAKN,EAAQC,GAChCM,EAAkB,GAEfC,EAAI,EAAGA,GAAKJ,EAAaI,GAAK,EACrCD,EAAME,KAAKD,GAqBb,OACE,qBAAIE,UAAU,aAAd,UACE,oBACEA,UAAWC,IACT,YACA,CACEC,SAA0B,IAAhBV,IAJhB,SAQE,mBACE,UAAQ,WACRQ,UAAU,YACVG,KAAK,QACL,gBAA+B,IAAhBX,EACfY,QArBgB,WAClBZ,EAAc,GAChBC,EAAaD,EAAc,IAczB,oBAUDK,EAAMQ,KAAI,SAAAC,GAAI,OACb,oBAEEN,UAAWC,IAAW,YACpB,CACEM,OAAQD,IAASd,IAJvB,SAOE,mBACE,UAAQ,WACRQ,UAAU,YACVG,KAAI,WAAMG,GACVF,QACE,SAACI,GAAD,OAnDe,SAACF,GACtBA,GACFb,GAAca,GAiDCG,CAAmBD,EAAEE,cAAcC,cAL9C,SAQGL,KAdEA,MAmBT,oBACEN,UAAWC,IACT,YACA,CACEC,SAAUV,IAAgBE,IAJhC,SAQE,mBACE,UAAQ,WACRM,UAAU,YACVG,KAAK,QACL,gBAAeX,IAAgBE,EAC/BU,QAlEgB,WAClBZ,EAAcE,GAChBD,EAAaD,EAAc,IA2DzB,wBCjFFoB,ECNC,SAAoBC,EAAcC,GAGvC,IAFA,IAAMC,EAAU,GAEPC,EAAIH,EAAMG,GAAKF,EAAIE,GAAK,EAC/BD,EAAQhB,KAAKiB,GAGf,OAAOD,EDDKE,CAAW,EAAG,IACzBZ,KAAI,SAAAW,GAAC,qBAAYA,MAEPE,EAAgB,WAO3B,IANA,MAA8BC,mBAAS,GAAvC,mBAAO5B,EAAP,KAAgB6B,EAAhB,KACA,EAAsCD,mBAAS,GAA/C,mBAAO3B,EAAP,KAAoB6B,EAApB,KACMC,EAAQ9B,EAAcD,EAAUA,EAAU,EAC1CgC,EAAS5B,KAAK6B,IAAIhC,EAAcD,EAASqB,EAAMa,QAC/CC,EAAyB,GAEtB5B,EAAYwB,EAAQ,EAAGxB,EAAIyB,EAAQzB,GAAK,EAC/C4B,EAAa3B,KAAKa,EAAMd,IAO1B,OAJA6B,qBAAU,WACRN,EAAe,KACd,CAAC9B,IAGF,sBAAKS,UAAU,YAAf,UACE,uDAEA,mBAAGA,UAAU,OAAO,UAAQ,OAA5B,wBACWR,EADX,mBACiC8B,EADjC,cAC4CC,EAD5C,aAIA,sBAAKvB,UAAU,iBAAf,UACE,qBAAKA,UAAU,0BAAf,SACE,yBACE,UAAQ,kBACR4B,GAAG,kBACH5B,UAAU,eACV6B,MAAOtC,EACPuC,SAAU,SAACC,GAAD,OAAWX,GAAYW,EAAMrB,cAAcmB,QALvD,UAOE,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,KAAd,gBACA,wBAAQA,MAAM,KAAd,qBAIJ,uBAAOG,QAAQ,kBAAkBhC,UAAU,qBAA3C,+BAKF,cAAC,EAAD,CACEV,MAAOsB,EAAMa,OACblC,QAASA,EACTC,YAAaA,EACbC,aAAc,SAACa,GAAD,OAAUe,EAAef,MAGzC,6BACGoB,EAAarB,KAAI,SAAA4B,GAAI,OACpB,oBAEE,UAAQ,OAFV,SAIGA,GAHIA,YE5DjBC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.bf47e331.chunk.js","sourcesContent":["import classNames from 'classnames';\nimport React from 'react';\n\ntype Props = {\n  total: number,\n  perPage: number,\n  currentPage: number,\n  onPageChange: (page: number) => void,\n};\n\nexport const Pagination: React.FC<Props> = ({\n  total, perPage, currentPage, onPageChange,\n}) => {\n  const amountPages = Math.ceil(total / perPage);\n  const pages: number[] = [];\n\n  for (let i = 1; i <= amountPages; i += 1) {\n    pages.push(i);\n  }\n\n  const handlerCurrentPage = (page: string | null) => {\n    if (page) {\n      onPageChange(+page);\n    }\n  };\n\n  const handlerNextPage = () => {\n    if (currentPage < amountPages) {\n      onPageChange(currentPage + 1);\n    }\n  };\n\n  const handlerPrevPage = () => {\n    if (currentPage > 1) {\n      onPageChange(currentPage - 1);\n    }\n  };\n\n  return (\n    <ul className=\"pagination\">\n      <li\n        className={classNames(\n          'page-item',\n          {\n            disabled: currentPage === 1,\n          },\n        )}\n      >\n        <a\n          data-cy=\"prevLink\"\n          className=\"page-link\"\n          href=\"#prev\"\n          aria-disabled={currentPage === 1}\n          onClick={handlerPrevPage}\n        >\n          «\n        </a>\n      </li>\n      {pages.map(page => (\n        <li\n          key={page}\n          className={classNames('page-item',\n            {\n              active: page === currentPage,\n            })}\n        >\n          <a\n            data-cy=\"pageLink\"\n            className=\"page-link\"\n            href={`#${page}`}\n            onClick={\n              (e) => handlerCurrentPage(e.currentTarget.textContent)\n            }\n          >\n            {page}\n          </a>\n        </li>\n      ))}\n\n      <li\n        className={classNames(\n          'page-item',\n          {\n            disabled: currentPage === amountPages,\n          },\n        )}\n      >\n        <a\n          data-cy=\"nextLink\"\n          className=\"page-link\"\n          href=\"#next\"\n          aria-disabled={currentPage === amountPages}\n          onClick={handlerNextPage}\n        >\n          »\n        </a>\n      </li>\n    </ul>\n  );\n};\n","import React, { useEffect, useState } from 'react';\nimport './App.css';\nimport { getNumbers } from './utils';\nimport { Pagination } from './components/Pagination';\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst items = getNumbers(1, 42)\n  .map(n => `Item ${n}`);\n\nexport const App: React.FC = () => {\n  const [perPage, setPerPage] = useState(3);\n  const [currentPage, setCurrentPage] = useState(1);\n  const start = currentPage * perPage - perPage + 1;\n  const finish = Math.min(currentPage * perPage, items.length);\n  const itemsOnPages: string[] = [];\n\n  for (let i: number = start - 1; i < finish; i += 1) {\n    itemsOnPages.push(items[i]);\n  }\n\n  useEffect(() => {\n    setCurrentPage(1);\n  }, [perPage]);\n\n  return (\n    <div className=\"container\">\n      <h1>Items with Pagination</h1>\n\n      <p className=\"lead\" data-cy=\"info\">\n        {`Page ${currentPage} (items ${start} - ${finish} of 42)`}\n      </p>\n\n      <div className=\"form-group row\">\n        <div className=\"col-3 col-sm-2 col-xl-1\">\n          <select\n            data-cy=\"perPageSelector\"\n            id=\"perPageSelector\"\n            className=\"form-control\"\n            value={perPage}\n            onChange={(event) => setPerPage(+event.currentTarget.value)}\n          >\n            <option value=\"3\">3</option>\n            <option value=\"5\">5</option>\n            <option value=\"10\">10</option>\n            <option value=\"20\">20</option>\n          </select>\n        </div>\n\n        <label htmlFor=\"perPageSelector\" className=\"col-form-label col\">\n          items per page\n        </label>\n      </div>\n\n      <Pagination\n        total={items.length}\n        perPage={perPage}\n        currentPage={currentPage}\n        onPageChange={(page) => setCurrentPage(page)}\n      />\n\n      <ul>\n        {itemsOnPages.map(item => (\n          <li\n            key={item}\n            data-cy=\"item\"\n          >\n            {item}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default App;\n","export function getNumbers(from: number, to: number): number[] {\n  const numbers = [];\n\n  for (let n = from; n <= to; n += 1) {\n    numbers.push(n);\n  }\n\n  return numbers;\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}